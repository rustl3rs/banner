import https://gist.githubusercontent.com/pms1969/464d6304014f9376be7e07b3ccf3a972/raw/a929e3feccd5384a00fe4e7ce6431f46dbb02951/cowsay.ban

let git_image = Image {
    name=rancher/alpine-git:latest,
    mount=[
        ${src} => "/source",
    ]
}

task get-source(image: ${git_image}, execute: r#"clone -b test-engine https://github.com/rustl3rs/banner.git /source"#) { r#""# }

let rust_build_image = Image {
    name=rust,
    mount=[
        banner.get-source.get-source.src => "/source-code",
    ],
    env=[
        BANNER_ENV_VAR="hello banner!",
        RUSTLOG="${log_level}",
        RUST_BACKTRACE="1",
    ]
}

task check-clippy(image: ${rust_build_image}, execute: "bash -eo pipefail -c") {
    r#"
    rustup component add clippy
    cd /source-code

    # would be good to run pedantic; but we aren't there yet.
    # `-Dwarnings` ensures clippy exists non-zero if there are warnings.
    cargo clippy -- -Dwarnings -Wclippy::pedantic
    "#
}

task check-format(image: ${rust_build_image}, execute: "bash -eo pipefail -c") {
    r#"
    rustup component add rustfmt
    cd /source-code

    cargo fmt

    # check if there are any changes. there should not be.
    if git diff --exit-code --quiet HEAD; then
        echo "No changes detected."
        exit 0
    else
        echo "Changes detected."
        git diff
        exit 1
    fi
    "#
}

task test(image: ${rust_build_image}, execute: "bash -exo pipefail -c") {
    r#"
    if [ $(uname -m) == "aarch64" ]; then
        curl -LsSf https://get.nexte.st/latest/linux-arm | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
    else
        curl -LsSf https://get.nexte.st/latest/linux | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin
    fi
    cd /source-code

    # would be good to capture code coverage stats here.
    cargo nextest run -v
    "#
}

pipeline banner [
    get-source!,
    {
        check-format!,
        check-clippy!,
    },
    test!,
]
